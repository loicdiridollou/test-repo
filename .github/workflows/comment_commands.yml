name: Comment Commands to Trigger CI
on:
  issue_comment:
    types: created

permissions:
  checks: write

env:
  # store mapping of commands to use with poetry
  RUN_COMMAND: '{"/pandas_nightly": "pytest --nightly", "/pyright_strict": "pyright_strict", "/mypy_nightly": "mypy --mypy_nightly"}'
  # store mapping of labels to display in the check runs
  DISPLAY_COMMAND: '{"/pandas_nightly": "Pandas nightly tests", "/pyright_strict": "Pyright strict tests", "/mypy_nightly": "Mypy nightly tests"}'

jobs:
  optional_tests:
    name: "Optional tests run"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # if more commands are added, they will need to be added here too as we don't have access to env at this stage
    if: (github.event.issue.pull_request) && contains(fromJSON('["/pandas_nightly", "/pyright_strict", "/mypy_nightly"]'), github.event.comment.body)

    steps:
      - name: Get head sha and store value
        # get the sha of the last commit to attach the results of the tests
        if: always()
        id: get-branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.issue.number }}
            })
            core.setOutput('branch', pr.data.head.ref)

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: steps.get-branch.outputs.branch

      - name: Print branch name
        run: git rev-parse --abbrev-ref HEAD
